# -*- coding: utf-8 -*-
"""Assignment 5 - Convolutional Neural Networks.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BpO_g0bLJ4exLCSXbjFNpeIcvEi38VFj

### **Setup**
"""

!pip install tensorflow-gpu==2.0.0-beta1

import tensorflow as tf

tf.random.set_seed(1)
from tensorflow.keras import datasets, layers, models

"""### **Importing the dataset**"""

(train_images, train_labels), (test_images, test_labels) = tf.keras.datasets.cifar10.load_data()
print("train_images shape:", train_images.shape)
print("test_images shape:", test_images.shape)
print("train_labels shape:", train_labels.shape)
print("test_labels shape:", test_labels.shape)

train_images = train_images / 255
test_images = test_images / 255

"""### **Building the model**"""

model = tf.keras.models.Sequential()

"""Model should contain following layers:

```
1. convolutional layer with 64 filters of size (3, 3), relu activation and the correct input shape
2. convolutional layer with 32 filters of size (3, 3), relu activation
3. flatten layer
4. dense layer with 64 units and relu activation
5. dense layer with 10 units and softmax activation

```

Use 'Adam' optimizer

Use 'accuracy' as your metric
"""

# build the model
model.add(layers.Conv2D(64, (3, 3), activation='relu', input_shape=(32, 32, 3)))
model.add(layers.MaxPooling2D((2, 2)))
model.add(layers.Conv2D(32, (3, 3), activation='relu'))
model.add(layers.MaxPooling2D((2, 2)))
model.add(layers.Flatten())
model.add(layers.Dense(64, activation='relu'))
model.add(layers.Dense(10, activation='softmax'))

# check the number of parameters in the model
model.summary()

# compile the model
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(train_images, train_labels, epochs=10, batch_size=128, shuffle=True)

loss, accuracy = model.evaluate(test_images, test_labels)
print("Test Loss:", loss)
print("Test Accuracy:", accuracy)